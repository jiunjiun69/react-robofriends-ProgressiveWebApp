{"ast":null,"code":"import _classCallCheck from\"/Users/linhongjun/Desktop/udemy/robofriends-ProgressiveWebApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/linhongjun/Desktop/udemy/robofriends-ProgressiveWebApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/linhongjun/Desktop/udemy/robofriends-ProgressiveWebApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/linhongjun/Desktop/udemy/robofriends-ProgressiveWebApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{setSearchField,requestRobots}from'../actions';import CardList from'../components/CardList';import SearchBox from'../components/SearchBox';import Scroll from'../components/Scroll';import ErrorBoundry from'../components/ErrorBoundry';import Header from'../components/Header';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mapStateToProps=function mapStateToProps(state){return{searchField:state.searchRobots.searchField,robots:state.requestRobots.robots,isPending:state.requestRobots.isPending};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSearchChange:function onSearchChange(event){return dispatch(setSearchField(event.target.value));},onRequestRobots:function onRequestRobots(){return requestRobots(dispatch);}};};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.state={count:1};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.onRequestRobots();}},{key:\"render\",value:function render(){var _this$props=this.props,robots=_this$props.robots,searchField=_this$props.searchField,onSearchChange=_this$props.onSearchChange,isPending=_this$props.isPending;var filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchField.toLowerCase());});return/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(Header,{count:this.state.count}),/*#__PURE__*/_jsx(SearchBox,{searchChange:onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:isPending?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading\"}):/*#__PURE__*/_jsx(ErrorBoundry,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})})]});}}]);return App;}(Component);export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/linhongjun/Desktop/udemy/robofriends-ProgressiveWebApp/src/containers/App.js"],"names":["React","Component","connect","setSearchField","requestRobots","CardList","SearchBox","Scroll","ErrorBoundry","Header","mapStateToProps","state","searchField","searchRobots","robots","isPending","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","count","props","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":"gsBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,CAAyBC,aAAzB,KAA8C,YAA9C,CAEA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAEA,MAAO,WAAP,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,WAAW,CAAED,KAAK,CAACE,YAAN,CAAmBD,WAD3B,CAELE,MAAM,CAAEH,KAAK,CAACP,aAAN,CAAoBU,MAFvB,CAGLC,SAAS,CAAEJ,KAAK,CAACP,aAAN,CAAoBW,SAH1B,CAAP,CAKD,CAND,CAQA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLC,cAAc,CAAE,wBAACC,KAAD,QAAWF,CAAAA,QAAQ,CAACd,cAAc,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB,EADX,CAELC,eAAe,CAAE,iCAAMlB,CAAAA,aAAa,CAACa,QAAD,CAAnB,EAFZ,CAAP,CAID,CALD,C,GAOMM,CAAAA,G,0FACJ,cAAc,qCACZ,wBACA,MAAKZ,KAAL,CAAa,CACXa,KAAK,CAAE,CADI,CAAb,CAFY,aAKb,C,iDACD,4BAAoB,CAClB,KAAKC,KAAL,CAAWH,eAAX,GACD,C,sBAED,iBAAS,CACP,gBAA2D,KAAKG,KAAhE,CAAQX,MAAR,aAAQA,MAAR,CAAgBF,WAAhB,aAAgBA,WAAhB,CAA6BM,cAA7B,aAA6BA,cAA7B,CAA6CH,SAA7C,aAA6CA,SAA7C,CACA,GAAMW,CAAAA,cAAc,CAAGZ,MAAM,CAACa,MAAP,CAAc,SAAAC,KAAK,CAAI,CAC5C,MAAOA,CAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC,CAAP,CACD,CAFsB,CAAvB,CAGA,mBACE,aAAK,SAAS,CAAC,IAAf,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAE,KAAKnB,KAAL,CAAWa,KAA1B,EADF,cAEE,KAAC,SAAD,EAAW,YAAY,CAAEN,cAAzB,EAFF,cAGE,KAAC,MAAD,WACIH,SAAS,cAAG,+BAAH,cACT,KAAC,YAAD,wBACE,KAAC,QAAD,EAAU,MAAM,CAAEW,cAAlB,EADF,EAFJ,EAHF,GADF,CAaD,C,iBA7BezB,S,EAgClB,cAAeC,CAAAA,OAAO,CAACQ,eAAD,CAAkBM,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestRobots } from '../actions';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Header from '../components/Header';\n\nimport './App.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => requestRobots(dispatch)\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      count: 1\n    }\n  }\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { robots, searchField, onSearchChange, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className='tc'>\n        <Header count={this.state.count}/>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          { isPending ? <h1>Loading</h1> :\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}